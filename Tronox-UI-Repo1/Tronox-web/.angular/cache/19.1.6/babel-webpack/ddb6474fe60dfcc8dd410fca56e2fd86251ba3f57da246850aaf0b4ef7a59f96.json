{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { TileViewComponent } from '../tile-view/tile-view.component';\nlet TileLayoutComponent = class TileLayoutComponent {\n  ngOnChanges(changes) {\n    if (changes['selectedAppFromSubmenu']) {\n      // If it's the first change, just set tilesCopy without fade-out\n      if (!this.initialized) {\n        this.tilesCopy = this.tiles.filter(tile => tile.appName === this.selectedAppFromSubmenu);\n        this.initialized = true;\n      } else {\n        this.tilesCopy = this.tilesCopy.map(tile => ({\n          ...tile,\n          hide: true\n        })); // Trigger fade-out\n        setTimeout(() => {\n          this.tilesCopy = this.tiles.filter(tile => tile.appName === this.selectedAppFromSubmenu).map(tile => ({\n            ...tile,\n            hide: false\n          }));\n        }, 300);\n      }\n    }\n  }\n  tiles;\n  selectedAppFromSubmenu;\n  tilesCopy;\n  initialized = false;\n};\n__decorate([Input(), __metadata(\"design:type\", Object)], TileLayoutComponent.prototype, \"tiles\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], TileLayoutComponent.prototype, \"selectedAppFromSubmenu\", void 0);\n__decorate([Input(), __metadata(\"design:type\", Object)], TileLayoutComponent.prototype, \"tilesCopy\", void 0);\nTileLayoutComponent = __decorate([Component({\n  selector: 'lib-tile-layout',\n  imports: [CommonModule, MatGridListModule, TileViewComponent],\n  templateUrl: './tile-layout.component.html',\n  styleUrl: './tile-layout.component.scss'\n})], TileLayoutComponent);\nexport { TileLayoutComponent };","map":{"version":3,"names":["Component","Input","CommonModule","MatGridListModule","TileViewComponent","TileLayoutComponent","ngOnChanges","changes","initialized","tilesCopy","tiles","filter","tile","appName","selectedAppFromSubmenu","map","hide","setTimeout","__decorate","selector","imports","templateUrl","styleUrl"],"sources":["C:\\tronox\\Tronox-UI-Repo1\\Tronox-web\\libs\\shared\\ui-library\\src\\lib\\tile-layout\\tile-layout.component.ts"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { TileViewComponent } from '../tile-view/tile-view.component';\r\n\r\n@Component({\r\n  selector: 'lib-tile-layout',\r\n  imports: [CommonModule, MatGridListModule, TileViewComponent],\r\n  templateUrl: './tile-layout.component.html',\r\n  styleUrl: './tile-layout.component.scss',\r\n})\r\nexport class TileLayoutComponent implements OnChanges {\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['selectedAppFromSubmenu']) {\r\n      // If it's the first change, just set tilesCopy without fade-out\r\n      if (!this.initialized) {\r\n        this.tilesCopy = this.tiles.filter(\r\n          (tile: any) => tile.appName === this.selectedAppFromSubmenu\r\n        );\r\n        this.initialized = true;\r\n      } else {\r\n        this.tilesCopy = this.tilesCopy.map((tile: any) => ({\r\n          ...tile,\r\n          hide: true,\r\n        })); // Trigger fade-out\r\n        setTimeout(() => {\r\n          this.tilesCopy = this.tiles\r\n            .filter((tile: any) => tile.appName === this.selectedAppFromSubmenu)\r\n            .map((tile: any) => ({ ...tile, hide: false }));\r\n        }, 300);\r\n      }\r\n    }\r\n  }\r\n  @Input() tiles: any;\r\n  @Input() selectedAppFromSubmenu: any;\r\n  @Input() tilesCopy: any;\r\n  initialized = false;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAkC,eAAe;AAC1E,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,iBAAiB,QAAQ,kCAAkC;AAQ7D,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAC9BC,WAAWA,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,wBAAwB,CAAC,EAAE;MACrC;MACA,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE;QACrB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM,CAC/BC,IAAS,IAAKA,IAAI,CAACC,OAAO,KAAK,IAAI,CAACC,sBAAsB,CAC5D;QACD,IAAI,CAACN,WAAW,GAAG,IAAI;MACzB,CAAC,MAAM;QACL,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACM,GAAG,CAAEH,IAAS,KAAM;UAClD,GAAGA,IAAI;UACPI,IAAI,EAAE;SACP,CAAC,CAAC,CAAC,CAAC;QACLC,UAAU,CAAC,MAAK;UACd,IAAI,CAACR,SAAS,GAAG,IAAI,CAACC,KAAK,CACxBC,MAAM,CAAEC,IAAS,IAAKA,IAAI,CAACC,OAAO,KAAK,IAAI,CAACC,sBAAsB,CAAC,CACnEC,GAAG,CAAEH,IAAS,KAAM;YAAE,GAAGA,IAAI;YAAEI,IAAI,EAAE;UAAK,CAAE,CAAC,CAAC;QACnD,CAAC,EAAE,GAAG,CAAC;MACT;IACF;EACF;EACSN,KAAK;EACLI,sBAAsB;EACtBL,SAAS;EAClBD,WAAW,GAAG,KAAK;CACpB;AAJUU,UAAA,EAARjB,KAAK,EAAE,E,mFAAY;AACXiB,UAAA,EAARjB,KAAK,EAAE,E,oGAA6B;AAC5BiB,UAAA,EAARjB,KAAK,EAAE,E,uFAAgB;AAxBbI,mBAAmB,GAAAa,UAAA,EAN/BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,iBAAiB;EAC3BC,OAAO,EAAE,CAAClB,YAAY,EAAEC,iBAAiB,EAAEC,iBAAiB,CAAC;EAC7DiB,WAAW,EAAE,8BAA8B;EAC3CC,QAAQ,EAAE;CACX,CAAC,C,EACWjB,mBAAmB,CA0B/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}