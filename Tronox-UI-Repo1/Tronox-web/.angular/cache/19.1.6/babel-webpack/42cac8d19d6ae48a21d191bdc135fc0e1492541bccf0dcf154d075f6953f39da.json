{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AuthService } from '@tronox-web/util-library';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@tronox-web/util-library\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/forms\";\nexport class LoginComponent {\n  authService;\n  router;\n  username = '';\n  password = '';\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.authService.logout();\n  }\n  onLogin() {\n    this.authService.login(this.username, this.password).subscribe({\n      next: response => {\n        console.log(response.message);\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('tronox_username', this.username);\n        this.router.navigate(['/tile']);\n      },\n      error: err => {\n        console.error('Login failed', err);\n      }\n    });\n  }\n  onInput(field, event) {\n    if (field == 'username') {\n      this.username = event.target.value;\n    } else {\n      this.password = event.target.value;\n    }\n  }\n  static ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"lib-login\"]],\n    decls: 16,\n    vars: 0,\n    consts: [[1, \"login-container\"], [1, \"login-card\"], [1, \"logo-container\"], [\"src\", \"assets/tronox_logo.png\", \"alt\", \"Company Logo\", 1, \"logo\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Enter your username\", \"required\", \"\", 3, \"input\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Enter your password\", \"required\", \"\", 3, \"input\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"full-width\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\")(6, \"mat-form-field\", 4)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 5);\n        i0.ɵɵlistener(\"input\", function LoginComponent_Template_input_input_9_listener($event) {\n          return ctx.onInput(\"username\", $event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 4)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 6);\n        i0.ɵɵlistener(\"input\", function LoginComponent_Template_input_input_13_listener($event) {\n          return ctx.onInput(\"password\", $event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵtext(15, \" Login \");\n        i0.ɵɵelementEnd()()()()();\n      }\n    },\n    dependencies: [CommonModule, MatCardModule, i3.MatCard, i3.MatCardContent, MatFormFieldModule, i4.MatFormField, i4.MatLabel, MatInputModule, i5.MatInput, MatButtonModule, i6.MatButton, FormsModule, i7.ɵNgNoValidate, i7.NgControlStatusGroup, i7.NgForm],\n    styles: [\".login-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n  background-color: #0f216d;\\n}\\n\\n.login-card[_ngcontent-%COMP%] {\\n  width: 350px;\\n  padding: 20px;\\n  text-align: center;\\n}\\n\\n.logo-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  margin-bottom: 15px;\\n}\\n\\n.logo[_ngcontent-%COMP%] {\\n  max-width: 100px;\\n  height: auto;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSxtQkFBQTtBQUNGIiwiZmlsZSI6ImxvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBmMjE2ZDtcclxufVxyXG5cclxuLmxvZ2luLWNhcmQge1xyXG4gIHdpZHRoOiAzNTBweDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmxvZ28tY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbi5sb2dvIHtcclxuICBtYXgtd2lkdGg6IDEwMHB4O1xyXG4gIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuLmZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2xpYnMvc2hhcmVkL3VpLWxpYnJhcnkvc3JjL2xpYi9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxXQUFBO0VBQ0EsbUJBQUE7QUFDRjtBQUNBLHduQ0FBd25DIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBmMjE2ZDtcclxufVxyXG5cclxuLmxvZ2luLWNhcmQge1xyXG4gIHdpZHRoOiAzNTBweDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmxvZ28tY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbi5sb2dvIHtcclxuICBtYXgtd2lkdGg6IDEwMHB4O1xyXG4gIGhlaWdodDogYXV0bztcclxufVxyXG5cclxuLmZ1bGwtd2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","MatCardModule","MatFormFieldModule","MatInputModule","MatButtonModule","AuthService","Router","FormsModule","LoginComponent","authService","router","username","password","constructor","ngOnInit","logout","onLogin","login","subscribe","next","response","console","log","message","localStorage","setItem","token","navigate","error","err","onInput","field","event","target","value","i0","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","LoginComponent_Template_input_input_9_listener","$event","LoginComponent_Template_input_input_13_listener","LoginComponent_Template_button_click_14_listener","i3","MatCard","MatCardContent","i4","MatFormField","MatLabel","i5","MatInput","i6","MatButton","i7","ɵNgNoValidate","NgControlStatusGroup","NgForm","styles"],"sources":["C:\\tronox\\Tronox-UI-Repo1\\Tronox-web\\libs\\shared\\ui-library\\src\\lib\\login\\login.component.ts","C:\\tronox\\Tronox-UI-Repo1\\Tronox-web\\libs\\shared\\ui-library\\src\\lib\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { AuthService } from '@tronox-web/util-library';\r\nimport { Router } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'lib-login',\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    FormsModule,\r\n  ],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username = '';\r\n  password = '';\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n  ngOnInit(): void {\r\n    this.authService.logout();\r\n  }\r\n\r\n  onLogin() {\r\n    this.authService.login(this.username, this.password).subscribe({\r\n      next: (response) => {\r\n        console.log(response.message);\r\n        localStorage.setItem('token', response.token);\r\n        localStorage.setItem('tronox_username', this.username);\r\n        this.router.navigate(['/tile']);\r\n      },\r\n      error: (err) => {\r\n        console.error('Login failed', err);\r\n      },\r\n    });\r\n  }\r\n\r\n  onInput(field: string, event: any) {\r\n    if (field == 'username') {\r\n      this.username = event.target.value;\r\n    } else {\r\n      this.password = event.target.value;\r\n    }\r\n  }\r\n}\r\n","<div class=\"login-container\">\r\n  <mat-card class=\"login-card\">\r\n    <div class=\"logo-container\">\r\n      <img src=\"assets/tronox_logo.png\" alt=\"Company Logo\" class=\"logo\" />\r\n    </div>\r\n    <mat-card-content>\r\n      <form>\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Username</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Enter your username\"\r\n            required\r\n            (input)=\"onInput('username', $event)\"\r\n          />\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"outline\" class=\"full-width\">\r\n          <mat-label>Password</mat-label>\r\n          <input\r\n            matInput\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            (input)=\"onInput('password', $event)\"\r\n            required\r\n          />\r\n        </mat-form-field>\r\n\r\n        <button\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          class=\"full-width\"\r\n          (click)=\"onLogin()\"\r\n        >\r\n          Login\r\n        </button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}