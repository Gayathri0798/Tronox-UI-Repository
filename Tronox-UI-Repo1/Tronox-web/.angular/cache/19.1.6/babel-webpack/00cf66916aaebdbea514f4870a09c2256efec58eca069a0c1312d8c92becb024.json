{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { TileService } from '@tronox-web/util-library';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@tronox-web/util-library\";\nexport class TestResultDialogComponent {\n  dialogRef;\n  data;\n  tileService;\n  constructor(dialogRef, data, tileService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.tileService = tileService;\n  }\n  closeDialog() {\n    this.dialogRef.close();\n  }\n  static ɵfac = function TestResultDialogComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TestResultDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.TileService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TestResultDialogComponent,\n    selectors: [[\"lib-test-result-dialog\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"test-results-container\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\", 3, \"click\"]],\n    template: function TestResultDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"Test Results\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\", 1)(3, \"pre\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"mat-dialog-actions\", 2)(6, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function TestResultDialogComponent_Template_button_click_6_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(7, \"Close\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.data);\n      }\n    },\n    dependencies: [CommonModule, MatDialogModule, i1.MatDialogClose, i1.MatDialogTitle, i1.MatDialogActions, i1.MatDialogContent],\n    styles: [\".mat-dialog-container {\\n  height: 80vh;\\n}\\n\\n  .mat-mdc-dialog-content {\\n  max-height: 85vh;\\n  overflow: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QtcmVzdWx0LWRpYWxvZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQUNGIiwiZmlsZSI6InRlc3QtcmVzdWx0LWRpYWxvZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAubWF0LWRpYWxvZy1jb250YWluZXIge1xyXG4gIGhlaWdodDogODB2aDsgLy8gQWRqdXN0IGhlaWdodCBhcyBuZWVkZWRcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtbWRjLWRpYWxvZy1jb250ZW50IHtcclxuICBtYXgtaGVpZ2h0OiA4NXZoOyAvLyBBZGp1c3QgaGVpZ2h0IGFzIG5lZWRlZFxyXG4gIG92ZXJmbG93OiBhdXRvOyAvLyBFbnN1cmUgc2Nyb2xsIGlmIGNvbnRlbnQgb3ZlcmZsb3dzXHJcbn1cclxuIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2xpYnMvc2hhcmVkL3VpLWxpYnJhcnkvc3JjL2xpYi90ZXN0LXJlc3VsdC1kaWFsb2cvdGVzdC1yZXN1bHQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FBQ0Y7QUFDQSx3b0JBQXdvQiIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAubWF0LWRpYWxvZy1jb250YWluZXIge1xyXG4gIGhlaWdodDogODB2aDsgLy8gQWRqdXN0IGhlaWdodCBhcyBuZWVkZWRcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtbWRjLWRpYWxvZy1jb250ZW50IHtcclxuICBtYXgtaGVpZ2h0OiA4NXZoOyAvLyBBZGp1c3QgaGVpZ2h0IGFzIG5lZWRlZFxyXG4gIG92ZXJmbG93OiBhdXRvOyAvLyBFbnN1cmUgc2Nyb2xsIGlmIGNvbnRlbnQgb3ZlcmZsb3dzXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","MAT_DIALOG_DATA","MatDialogModule","MatDialogRef","TileService","TestResultDialogComponent","dialogRef","data","tileService","constructor","closeDialog","close","i0","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","TestResultDialogComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TestResultDialogComponent_Template_button_click_6_listener","ɵɵadvance","ɵɵtextInterpolate","MatDialogClose","MatDialogTitle","MatDialogActions","MatDialogContent","styles"],"sources":["C:\\tronox\\Tronox-UI-Repo1\\Tronox-web\\libs\\shared\\ui-library\\src\\lib\\test-result-dialog\\test-result-dialog.component.ts","C:\\tronox\\Tronox-UI-Repo1\\Tronox-web\\libs\\shared\\ui-library\\src\\lib\\test-result-dialog\\test-result-dialog.component.html"],"sourcesContent":["import { Component, Inject, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MAT_DIALOG_DATA,\r\n  MatDialog,\r\n  MatDialogModule,\r\n  MatDialogRef,\r\n} from '@angular/material/dialog';\r\nimport { TileService } from '@tronox-web/util-library';\r\n\r\n@Component({\r\n  selector: 'lib-test-result-dialog',\r\n  imports: [CommonModule, MatDialogModule],\r\n  templateUrl: './test-result-dialog.component.html',\r\n  styleUrl: './test-result-dialog.component.scss',\r\n})\r\nexport class TestResultDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TestResultDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private readonly tileService: TileService\r\n  ) {}\r\n\r\n  closeDialog(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h2 mat-dialog-title>Test Results</h2>\r\n\r\n<mat-dialog-content class=\"test-results-container\">\r\n  <pre>{{ data }}</pre>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close (click)=\"closeDialog()\">Close</button>\r\n</mat-dialog-actions>\r\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SACEC,eAAe,EAEfC,eAAe,EACfC,YAAY,QACP,0BAA0B;AACjC,SAASC,WAAW,QAAQ,0BAA0B;;;;AAQtD,OAAM,MAAOC,yBAAyB;EAE3BC,SAAA;EACyBC,IAAA;EACfC,WAAA;EAHnBC,YACSH,SAAkD,EACzBC,IAAS,EACxBC,WAAwB;IAFlC,KAAAF,SAAS,GAATA,SAAS;IACgB,KAAAC,IAAI,GAAJA,IAAI;IACnB,KAAAC,WAAW,GAAXA,WAAW;EAC3B;EAEHE,WAAWA,CAAA;IACT,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAE;EACxB;;qCATWN,yBAAyB,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAX,YAAA,GAAAS,EAAA,CAAAC,iBAAA,CAG1BZ,eAAe,GAAAW,EAAA,CAAAC,iBAAA,CAAAE,EAAA,CAAAX,WAAA;EAAA;;UAHdC,yBAAyB;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChBtCV,EAAA,CAAAY,cAAA,YAAqB;QAAAZ,EAAA,CAAAa,MAAA,mBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAGpCd,EADF,CAAAY,cAAA,4BAAmD,UAC5C;QAAAZ,EAAA,CAAAa,MAAA,GAAU;QACjBb,EADiB,CAAAc,YAAA,EAAM,EACF;QAGnBd,EADF,CAAAY,cAAA,4BAAgC,gBAC8B;QAAxBZ,EAAA,CAAAe,UAAA,mBAAAC,2DAAA;UAAA,OAASL,GAAA,CAAAb,WAAA,EAAa;QAAA,EAAC;QAACE,EAAA,CAAAa,MAAA,YAAK;QACnEb,EADmE,CAAAc,YAAA,EAAS,EACvD;;;QALdd,EAAA,CAAAiB,SAAA,GAAU;QAAVjB,EAAA,CAAAkB,iBAAA,CAAAP,GAAA,CAAAhB,IAAA,CAAU;;;mBDSLP,YAAY,EAAEE,eAAe,EAAAY,EAAA,CAAAiB,cAAA,EAAAjB,EAAA,CAAAkB,cAAA,EAAAlB,EAAA,CAAAmB,gBAAA,EAAAnB,EAAA,CAAAoB,gBAAA;IAAAC,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}