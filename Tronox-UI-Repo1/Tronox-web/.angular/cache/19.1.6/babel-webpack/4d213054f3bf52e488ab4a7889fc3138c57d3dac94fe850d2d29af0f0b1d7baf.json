{"ast":null,"code":"import { SimpleChanges } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { TileViewComponent } from '../tile-view/tile-view.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/grid-list\";\nconst _forTrack0 = ($index, $item) => $item.appNamespec;\nconst _c0 = a0 => ({\n  \"fade-out\": a0\n});\nfunction TileLayoutComponent_For_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 1);\n    i0.ɵɵelement(1, \"lib-tile-view\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tile_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, tile_r1.hide));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"tile\", tile_r1);\n  }\n}\nexport class TileLayoutComponent {\n  ngOnChanges(changes) {\n    if (changes['selectedAppFromSubmenu']) {\n      // If it's the first change, just set tilesCopy without fade-out\n      if (!this.initialized) {\n        this.tilesCopy = this.tiles.filter(tile => tile.appName === this.selectedAppFromSubmenu);\n        this.initialized = true;\n      } else {\n        this.tilesCopy = this.tilesCopy.map(tile => ({\n          ...tile,\n          hide: true\n        })); // Trigger fade-out\n        setTimeout(() => {\n          this.tilesCopy = this.tiles.filter(tile => tile.appName === this.selectedAppFromSubmenu).map(tile => ({\n            ...tile,\n            hide: false\n          }));\n        }, 300);\n      }\n    }\n  }\n  tiles;\n  selectedAppFromSubmenu;\n  tilesCopy;\n  initialized = false;\n  static ɵfac = function TileLayoutComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TileLayoutComponent)();\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TileLayoutComponent,\n    selectors: [[\"lib-tile-layout\"]],\n    inputs: {\n      tiles: \"tiles\",\n      selectedAppFromSubmenu: \"selectedAppFromSubmenu\",\n      tilesCopy: \"tilesCopy\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 0,\n    consts: [[\"cols\", \"3\", \"rowHeight\", \"170px\", \"gutterSize\", \"16px\"], [1, \"tile\", 3, \"ngClass\"], [3, \"tile\"]],\n    template: function TileLayoutComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-grid-list\", 0);\n        i0.ɵɵrepeaterCreate(1, TileLayoutComponent_For_2_Template, 2, 4, \"mat-grid-tile\", 1, _forTrack0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵrepeater(ctx.tilesCopy);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, MatGridListModule, i2.MatGridList, i2.MatGridTile, TileViewComponent],\n    styles: [\".tile[_ngcontent-%COMP%] {\\n  min-width: 200px; \\n\\n  margin: 10px;\\n  min-height: 100px; \\n\\n  opacity: 1;\\n  transition: opacity 0.5s ease-in-out;\\n}\\n\\n.tile.fade-out[_ngcontent-%COMP%] {\\n  opacity: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpbGUtbGF5b3V0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUEsRUFBQSwyQkFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQSxFQUFBLDRCQUFBO0VBQ0EsVUFBQTtFQUNBLG9DQUFBO0FBQ0Y7O0FBRUE7RUFDRSxVQUFBO0FBQ0YiLCJmaWxlIjoidGlsZS1sYXlvdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGlsZSB7XHJcbiAgbWluLXdpZHRoOiAyMDBweDsgLyogTWF0Y2hlcyBtYXQtY2FyZCB3aWR0aCAqL1xyXG4gIG1hcmdpbjogMTBweDtcclxuICBtaW4taGVpZ2h0OiAxMDBweDsgLyogTWF0Y2hlcyBtYXQtY2FyZCBoZWlnaHQgKi9cclxuICBvcGFjaXR5OiAxO1xyXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuLnRpbGUuZmFkZS1vdXQge1xyXG4gIG9wYWNpdHk6IDA7XHJcbn1cclxuIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2xpYnMvc2hhcmVkL3VpLWxpYnJhcnkvc3JjL2xpYi90aWxlLWxheW91dC90aWxlLWxheW91dC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBLEVBQUEsMkJBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUEsRUFBQSw0QkFBQTtFQUNBLFVBQUE7RUFDQSxvQ0FBQTtBQUNGOztBQUVBO0VBQ0UsVUFBQTtBQUNGO0FBQ0EsZ3NCQUFnc0IiLCJzb3VyY2VzQ29udGVudCI6WyIudGlsZSB7XHJcbiAgbWluLXdpZHRoOiAyMDBweDsgLyogTWF0Y2hlcyBtYXQtY2FyZCB3aWR0aCAqL1xyXG4gIG1hcmdpbjogMTBweDtcclxuICBtaW4taGVpZ2h0OiAxMDBweDsgLyogTWF0Y2hlcyBtYXQtY2FyZCBoZWlnaHQgKi9cclxuICBvcGFjaXR5OiAxO1xyXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBlYXNlLWluLW91dDtcclxufVxyXG5cclxuLnRpbGUuZmFkZS1vdXQge1xyXG4gIG9wYWNpdHk6IDA7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["SimpleChanges","CommonModule","MatGridListModule","TileViewComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction1","_c0","tile_r1","hide","ɵɵadvance","TileLayoutComponent","ngOnChanges","changes","initialized","tilesCopy","tiles","filter","tile","appName","selectedAppFromSubmenu","map","setTimeout","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","TileLayoutComponent_Template","rf","ctx","ɵɵrepeaterCreate","TileLayoutComponent_For_2_Template","_forTrack0","ɵɵrepeater","i1","NgClass","i2","MatGridList","MatGridTile","styles"],"sources":["C:\\tronox\\Tronox-UI-Repo1\\Tronox-web\\libs\\shared\\ui-library\\src\\lib\\tile-layout\\tile-layout.component.ts","C:\\tronox\\Tronox-UI-Repo1\\Tronox-web\\libs\\shared\\ui-library\\src\\lib\\tile-layout\\tile-layout.component.html"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { TileViewComponent } from '../tile-view/tile-view.component';\r\n\r\n@Component({\r\n  selector: 'lib-tile-layout',\r\n  imports: [CommonModule, MatGridListModule, TileViewComponent],\r\n  templateUrl: './tile-layout.component.html',\r\n  styleUrl: './tile-layout.component.scss',\r\n})\r\nexport class TileLayoutComponent implements OnChanges {\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['selectedAppFromSubmenu']) {\r\n      // If it's the first change, just set tilesCopy without fade-out\r\n      if (!this.initialized) {\r\n        this.tilesCopy = this.tiles.filter(\r\n          (tile: any) => tile.appName === this.selectedAppFromSubmenu\r\n        );\r\n        this.initialized = true;\r\n      } else {\r\n        this.tilesCopy = this.tilesCopy.map((tile: any) => ({\r\n          ...tile,\r\n          hide: true,\r\n        })); // Trigger fade-out\r\n        setTimeout(() => {\r\n          this.tilesCopy = this.tiles\r\n            .filter((tile: any) => tile.appName === this.selectedAppFromSubmenu)\r\n            .map((tile: any) => ({ ...tile, hide: false }));\r\n        }, 300);\r\n      }\r\n    }\r\n  }\r\n  @Input() tiles: any;\r\n  @Input() selectedAppFromSubmenu: any;\r\n  @Input() tilesCopy: any;\r\n  initialized = false;\r\n}\r\n","<mat-grid-list cols=\"3\" rowHeight=\"170px\" gutterSize=\"16px\">\r\n  @for(tile of tilesCopy; track tile.appNamespec ){\r\n  <mat-grid-tile class=\"tile\" [ngClass]=\"{ 'fade-out': tile.hide }\">\r\n    <lib-tile-view [tile]=\"tile\"> </lib-tile-view>\r\n  </mat-grid-tile>\r\n  }\r\n</mat-grid-list>\r\n"],"mappings":"AAAA,SAAsCA,aAAa,QAAQ,eAAe;AAC1E,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,iBAAiB,QAAQ,kCAAkC;;;;;;;;;;ICDlEC,EAAA,CAAAC,cAAA,uBAAkE;IAChED,EAAA,CAAAE,SAAA,uBAA8C;IAChDF,EAAA,CAAAG,YAAA,EAAgB;;;;IAFYH,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAAK,eAAA,IAAAC,GAAA,EAAAC,OAAA,CAAAC,IAAA,EAAqC;IAChDR,EAAA,CAAAS,SAAA,EAAa;IAAbT,EAAA,CAAAI,UAAA,SAAAG,OAAA,CAAa;;;ADQhC,OAAM,MAAOG,mBAAmB;EAC9BC,WAAWA,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,wBAAwB,CAAC,EAAE;MACrC;MACA,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE;QACrB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACC,MAAM,CAC/BC,IAAS,IAAKA,IAAI,CAACC,OAAO,KAAK,IAAI,CAACC,sBAAsB,CAC5D;QACD,IAAI,CAACN,WAAW,GAAG,IAAI;MACzB,CAAC,MAAM;QACL,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACM,GAAG,CAAEH,IAAS,KAAM;UAClD,GAAGA,IAAI;UACPT,IAAI,EAAE;SACP,CAAC,CAAC,CAAC,CAAC;QACLa,UAAU,CAAC,MAAK;UACd,IAAI,CAACP,SAAS,GAAG,IAAI,CAACC,KAAK,CACxBC,MAAM,CAAEC,IAAS,IAAKA,IAAI,CAACC,OAAO,KAAK,IAAI,CAACC,sBAAsB,CAAC,CACnEC,GAAG,CAAEH,IAAS,KAAM;YAAE,GAAGA,IAAI;YAAET,IAAI,EAAE;UAAK,CAAE,CAAC,CAAC;QACnD,CAAC,EAAE,GAAG,CAAC;MACT;IACF;EACF;EACSO,KAAK;EACLI,sBAAsB;EACtBL,SAAS;EAClBD,WAAW,GAAG,KAAK;;qCAzBRH,mBAAmB;EAAA;;UAAnBA,mBAAmB;IAAAY,SAAA;IAAAC,MAAA;MAAAR,KAAA;MAAAI,sBAAA;MAAAL,SAAA;IAAA;IAAAU,QAAA,GAAAxB,EAAA,CAAAyB,oBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXhC/B,EAAA,CAAAC,cAAA,uBAA4D;QAC1DD,EAAA,CAAAiC,gBAAA,IAAAC,kCAAA,4BAAAC,UAAA,CAIC;QACHnC,EAAA,CAAAG,YAAA,EAAgB;;;QALdH,EAAA,CAAAS,SAAA,EAIC;QAJDT,EAAA,CAAAoC,UAAA,CAAAJ,GAAA,CAAAlB,SAAA,CAIC;;;mBDESjB,YAAY,EAAAwC,EAAA,CAAAC,OAAA,EAAExC,iBAAiB,EAAAyC,EAAA,CAAAC,WAAA,EAAAD,EAAA,CAAAE,WAAA,EAAE1C,iBAAiB;IAAA2C,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}